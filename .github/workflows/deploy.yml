name: 🚀 Build and Deploy Professor S. Govindasamy Website
# Repository: git@github.com:kgptapps/sgtrust.git
# Deployment URL: https://kgptapps.github.io/sgtrust/

on:
  push:
    branches: [ main ]
    paths:
      - 'website/**'
      - '.github/workflows/**'
      - 'index.html'
  pull_request:
    branches: [ main ]
    paths:
      - 'website/**'
      - '.github/workflows/**'
      - 'index.html'
  workflow_dispatch: # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: write
  checks: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '20'
  CACHE_VERSION: 'v1'

jobs:
  # Quality checks and build job
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      build-success: ${{ steps.build-check.outputs.success }}
      test-results: ${{ steps.test-summary.outputs.results }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better caching

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: website/package-lock.json

      - name: 📦 Install dependencies
        run: |
          cd website
          echo "🔍 Checking package-lock.json integrity..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully"

      - name: 🔍 Verify installation
        run: |
          cd website
          echo "📋 Installed packages:"
          npm list --depth=0 || true
          echo "🔧 Node version: $(node --version)"
          echo "📦 NPM version: $(npm --version)"

      - name: 🧪 Run tests (non-blocking)
        run: |
          cd website
          echo "Running tests..."
          npm test -- --run || echo "⚠️ Tests failed but continuing build"

      - name: 🌐 Run translation coverage tests (non-blocking)
        run: |
          cd website
          echo "Checking translation coverage..."
          npm run test:translations -- --run || echo "⚠️ Translation tests failed but continuing build"

      - name: 🔍 Run linting (non-blocking)
        run: |
          cd website
          echo "Running ESLint..."
          npm run lint || echo "⚠️ Linting failed but continuing build"

      - name: 🏗️ Build website (CRITICAL)
        run: |
          cd website
          echo "Building website..."
          npm run build
          echo "✅ Build completed successfully"

      - name: 🔍 Verify build output
        run: |
          cd website
          if [ ! -f "dist/index.html" ]; then
            echo "❌ Missing dist/index.html"
            exit 1
          fi
          if [ ! -d "dist/assets" ]; then
            echo "❌ Missing dist/assets directory"
            exit 1
          fi
          echo "✅ Build output verified"
          echo "📊 Build size: $(du -sh dist | cut -f1)"

      - name: Prepare deployment files
        run: |
          # Create deployment directory
          mkdir -p deploy

          # Copy built website files
          if [ -d "website/dist" ]; then
            cp -r website/dist/* deploy/
            echo "✅ Copied React build files"
          else
            echo "❌ No website/dist found"
            exit 1
          fi

          # Add .nojekyll for GitHub Pages (prevents Jekyll processing)
          touch deploy/.nojekyll

          # List deployed files for debugging
          echo "📁 Files prepared for deployment:"
          find deploy -type f | head -20

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
